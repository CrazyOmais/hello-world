第7课 常用操作符
1.	算数操作符
+ - * / % ** //
a = a + 3  等价于  a += 3
b = b – 1  等价于  b -= 1
同理 c *= 10
     d /= 8
// : 整数除法（没有余数）
% : 取余
** : 幂运算操作符
3 ** 4 等价于 3 * 3 * 3 * 3
运算符优先级： 
同四则运算，逻辑操作符和比较操作符优先级低于运算操作符
幂运算操作符优先级高于其左侧的一元运算操作符，低于其右侧一元运算操作符。如：
	-3 ** 2 等价于-(3 ** 2)，而
	3 ** -2 等价于3 ** (-2)
2.	比较操作符
< <= > >= 同C++
不同之处在于，python语言支持连续比较：
3 < a < 8
3.	逻辑操作符
and or not, 返回值为布尔类型。用法类似C++
4.	操作符优先级
幂运算>正负号(一元操作符)>算术操作符>比较操作符>逻辑运算符

课后练习
0.	Python 的 floor 除法现在使用 “ // ” 实现，那 3.0 // 2.0 您目测会显示什么内容呢？
答：1.0
1.	a < b < c 事实上是等于？
答：true或者false
2.	不使用 IDLE，你可以轻松说出 5 ** -2 的值吗？
答：0.04
3.	如何简单判断一个数是奇数还是偶数？
答：
test = a % 2
if test = 0:
a 是偶数
   else: 
       a 是奇数
4.	请用最快速度说出答案： not 1 or 0 and 1 or 3 and 4 or 5 and 6 or 7 and 8 and 9 
答：4
5.	还记得我们上节课那个求闰年的作业吗？如果还没有学到“求余”操作，还记得用什么方法可以“委曲求全”代替“ %”的功能呢？
答：if year/400 == int(year/400)
参考答案
0. Python 的 floor 除法现在使用 “ // ” 实现，那 3.0 // 2.0 您目测会显
示什么内容呢？
如果回答是 1.5 那么很遗憾， 您受到 C 语言的影响比较大， Python 这里会义无反顾地执行 floor 除法原则，答案是： 1.0 
1. a < b < c 事实上是等于？
(a < b) and (b < c) 
2. 不使用 IDLE，你可以轻松说出 5 ** -2 的值吗？
0.04 ，也就是 1/25 
幂运算操作符比其左侧的一元操作符优先级高，比其右侧的一元操作符优先级低。
3. 如何简单判断一个数是奇数还是偶数？
使用求余可以简单得到答案：能被 2 整除为偶数，所以 x % 2 == 0 ，否则为奇数。
4. 请用最快速度说出答案： not 1 or 0 and 1 or 3 and 4 or 5 and 6 or 7 and 
8 and 9
如果你的回答是 0，那么小甲鱼很开心你中招了！
答案是： 4 
not or and 的优先级是不同的： not > and > or 
我们按照优先级给它们加上括号： (not 1) or (0 and 1) or (3 and 4) or (5 and 6) or (7 and 8 and 9) == 0 or 0 or 4 or 6 or 9 == 4 
为啥是 4？
大家还记得第四讲作业提到的“短路逻辑”吗？ 3 and 4 == 4 ，而 3 or 4 == 3。
所以答案是： 4 
温馨提示：为了更好的表达你的程序， 小甲鱼再次呼吁有些括号还是不能省下的，毕竟不是所有程序员都跟你一样都将优先级烂透于心的。
5. 还记得我们上节课那个求闰年的作业吗？如果还没有学到“求余”操作，还记得用什么方法可以“委曲求全”代替“ %”的功能呢？
因为上节课我们还没有教大家“求余”的操作， 所以小甲鱼使用了“ if year/400 == int(year/400) ”这样的方式来“委曲求全”。
