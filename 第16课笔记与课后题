第16课 序列
1.	列表、元组和字符串的共同点
-	都可以通过索引的到每一个元素
-	默认索引值总是从0开始
-	可以通过分片的方法得到一个范围内的元素的集合
-	有很多共同操作符（重复操作符、拼接操作符、成员关系操作符）
因而，列表、元素和字符串统称为序列
2.	list()
作用：把一个可迭代对象转化为列表
不带参数时，生成一个空列表。
>>> a = list()
>>> a
[]
>>> b = "abcdefg"
>>> b = list(b)
>>> b
['a', 'b', 'c', 'd', 'e', 'f', 'g']
>>> c = (1, 2, 3, 4, 5)
>>> c = list(c)
>>> c
[1, 2, 3, 4, 5]
3.	tuple()
作用：把一个可迭代对象转换为元组
用法同list()
4.	str()
把obj对象转换为字符串
5.	len()
返回序列长度
6.	max()
返回序列参数中的最大值
7.	min()
返回序列参数中的最小值
*max()和min()要求序列内的参数种类是一样的
8.	sum()
返回序列和可选参数的总和
	>>> sum(c,100)
115
9.	sorted()
从小到大排序
10.	reversed()
从大到小排序（返回的是迭代器，需要用list()函数搭配使用）
>>> reversed(c)
<list_reverseiterator object at 0x05AF1A10>
>>> list(reversed(c))
[5, 4, 3, 2, 1]
11.	enumerate() 枚举，返回对象（同上）
>>> list(enumerate(c))
[(0, 1), (1, 2), (2, 3), (3, 4), (4, 5)]
12.	zip() 
>>> list(zip(c,b))
[(1, 'a'), (2, 'b'), (3, 'c'), (4, 'd'), (5, 'e')]
一个序列多出来的部分会自动舍去

课后练习
十五课
0. 根据说明填写相应的字符串格式化符号
符 号 说 明
 %c 格式化字符及其 ASCII 码
 %s 格式化字符串
 %d 格式化整数
 %o 格式化无符号八进制数
 %x 格式化无符号十六进制数
 %X 格式化无符号十六进制数（大写）
 %f 格式化定点数，可指定小数点后的精度
 %e 用科学计数法格式化定点数
 %g 根据值的大小决定使用 %f 或者%e 
 %G 根据值的大小决定使用 %F 或者%E
1. 请问以下这行代码会打印什么内容？
>>> "{{1}}".format(" 不打印 ", " 打印 ")
’{1}‘
2. 以下代码中， a, b, c 是什么参数？
>>> "{a} love {b}.{c}".format(a="I", b="FishC", c="com") 
'I love FishC.com'
答：关键字参数
3. 以下代码中， {0}, {1}, {2} 是什么参数？
>>> "{0} love {1}.{2}".format("I", "FishC", "com") 
'I love FishC.com'
答：位置参数
4. 如果想要显示 Pi = 3.14 ，format 前边的字符串应该怎么填写呢？
'{0}{1:.2f}'.format('Pi = ', 3.1415)

十六课
0.	我们根据列表、元祖和字符串的共同特点，把它们三统称为什么？
序列
1.	请问分别使用什么 BIF，可以把一个可迭代对象转换为列表、元祖和字符串？
list([iterable]) 把可迭代对象转换为列表
tuple([iterable]) 把可迭代对象转换为元祖
str(obj)  把对象转换为字符串
2.	你还能复述出“迭代”的概念吗？
当前循环的结果作为下一次循环的初始循环执行操作，直到满足跳出迭代的条件
（参考答案：）
所谓迭代， 是重复反馈过程的活动， 其目的通常是为了接近并到达所需的目标或结果。 每一次对过程的重复被称为一次“迭代”， 而每一次迭代得到的结果会被用来作为下一次迭代的初始值。
3.	你认为调用 max('I love FishC.com') 会返回什么值？为什么？
v 因为阿斯克码最大
4. 哎呀呀，现在的小屁孩太调皮了，邻居家的孩子淘气，把小甲鱼刚写好的代码画了个图
案，麻烦各位鱼油恢复下啊，另外这家伙画的是神马吗？怎么那么眼熟啊！？？
name = input(' 请输入待查找的用户名： ') 
score = [[' 迷途 ', 85], [' 黑夜 ', 80], [' 小布丁 ', 65], [' 福禄娃娃 ', 95], [' 怡静 ', 90]] 
IsFind = False 
	
for each in score: 
  if name in each: 
    print(name + ' 的得分是： ', each[1]) 
    IsFind = True 
    break 
	
  if IsFind == False: 
    print(' 查找的数据不存在！ ')
