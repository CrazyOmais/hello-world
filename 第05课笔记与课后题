第五课 改进小游戏
1.	猜错的时候给提示（猜测的大了还是小了）；
2.	提供多次猜测机会；
3.	运行程序的答案不应该是固定的，改成随机答案。

知识点：
1.	比较操作符
>
>=
<
<=
==
!=
含义与返回值均同C++
2.	Python的条件分支语法
If  条件:
		条件为true执行的操作
Else:
		条件为false执行的操作
3.	Python的循环语法
While 条件:
		条件为ture执行的操作
4.	Random模块
导入操作：import random
Randint()函数 返回一个随机整数

课后习题
0. 请问以下代码会打印多少次“我爱鱼 C！”
while 'C': 
print(' 我爱鱼 C!') 
	答：一直重复
1. 请问以下代码会打印多少次“我爱鱼 C！”
i = 10 
while i: 
print(' 我爱鱼 C!') 
i = i - 1 
	答：10次
2. 请写出与 10 < cost < 50 等价的表达式
	搭：cost > 10 and cost < 50
3.	Python3 中，一行可以书写多个语句吗？
答：我觉得不行可以，需要用分号隔离开
4.	Python3 中，一个语句可以分成多行书写吗？
答：可以
5. 请问 Python 的 and 操作符 和 C 语言的 && 操作符 有何不同？【该题针对有 C 或
C++ 基础的朋友】
答：1. 当两个操作数均为逻辑值时，与我们通常理解的逻辑运算一致；
2. 当第一个操作数为逻辑值，第二个操作数为其他类型时，执行以下规则：
    a and b：在a为false的时候,返回a,否则返回b。
    a or b： 在a为true的时候,返回a,否则返回b。
*猜测原因在于操作符可以重载，运算对象的类型不同时定义的含义不同。
参考资料：https://blog.csdn.net/sinat_37721982/article/details/79563798
5.	听说过“短路逻辑（ short-circuit logic ）”吗？
答：
if a and b：#如果a是false，那么跳过b的判断，结果直接false 
if a or b：#如果a为true，那么跳过b的判断，直接true
not or and 的优先级是不同的：not > and > or
比如：3 and 4 == 4，而 3 or 4 == 3

参考资料：https://blog.csdn.net/Aka_Happy/article/details/82054549
