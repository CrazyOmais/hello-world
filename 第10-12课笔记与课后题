第10-12课 数组
1.	列表的创建
普通列表：
member = [‘1’, ‘2’, ‘3’, ‘4’]
number = [1, 2, 3, 4]
混合列表：
mix = [‘1’, 2,[1, 2, 3]]
空列表：
empty= []
2.	向列表添加元素
2.1 append() 向列尾添加一个元素
>>> member = ['1', '2', '3', '4']
>>> member.append('5')
 member
['1', '2', '3', '4', '5']
2.2 extend() 向列尾添加多个元素（添加列表）
>>> member.extend(['6', '7'])
>>> member
['1', '2', '3', '4', '5', '6', '7']
2.3 insert() 在列表特定位置添加一个元素
>>> member.insert(1,'add')
>>> member
['1', 'add', '2', '3', '4', '5', '6', '7']
3.	从列表中获取元素
	>>> member[0]
'1'
>>> member[1]
'add'
4.	从列表删除元素
4.1	remove() 根据名称删除
>>> member.remove('2')
>>> member
['1', 'add', '3', '4', '5', '6', '7']
4.2	del 删除语句
>>> del member[1]
>>> member
['1', '3', '4', '5', '6', '7']
4.3	pop() 删除末尾或根据索引删除，并返回删除值（同C++出栈）
>>> member.pop()
'7'
>>> member
['1', '3', '4', '5', '6']
>>> member.pop(1)
'3'
>>> member
['1', '4', '5', '6']
5.	列表分片（slice）
一次性获取多个元素，得到一个原列表的拷贝
>>> member
['1', '4', '5', '6']
>>> member[1:3]
['4', '5']
>>> member[:3]
['1', '4', '5']
>>> member[:]
['1', '4', '5', '6']
6.	列表的常用操作符
6.1	比较操作符
比较方法同字符串的比较，从头比较
>>> list1 = [123]
	>>> list2 = [234]
>>> list1 > list2
False
>>> list1 = [123, 456]
>>> list2 = [234, 123]
	>>> list1 >list2
False
	6.2 逻辑操作符
>>> list3 = list1
>>> (list1 < list2) and (list1 == list3)
True
6.3 连接操作符
>>> list4 = list1 + list2
>>> list4
[123, 456, 234, 123]
6.4 重复操作符
>>> list3 *3
[123, 456, 123, 456, 123, 456]
6.5 成员关系操作符
>>> 123 in list3
True
>>> list5 = [123, ['1', '2'], 456]
>>> '1' in list5
False
>>> '1' in list5[1]
True
7.	列表的内置函数
查询：dir(list)
Count() 返回元素出现的次数
Index() 返回元素的位置  还可以设置数数的起始和结束位置
Reverse() 倒置列表
Sort(func, key) 用指定的方式对列表排序（默认从小到大），如果需要从大到小可以用sort(reverse=true)
*List2=list1和list2=list1[:]是不同的，前者是地址拷贝，后者是数据拷贝（同C++）

第10-11课课后练习
0.	列表都可以存放一些什么东西？
答： 整形、浮点型以及字符串都可以存放，还可以存放子列表
1.	向列表增加元素有哪些方法？
答： append(),extend()和insert(),还可以用列表的连接操作符和重复操作符增加列表元素
2.	append() 方法和 extend() 方法都是向列表的末尾增加元素， 请问他们有什么区别？
答： append()只能增加一个列表元素，extend()是增加一个列表数据，可以包含多个元素
3.	member.append([' 竹林小溪 ', 'Crazy 迷恋']) 和 member.extend([' 竹林小溪', 'Crazy 迷恋']) 实现的效果一样吗？
答： 不一样，前者是增加一个列表元素，后者是增加列表里的数据，增加了两个字符串元素
4.	有列表 name = ['F', 'i', 'h', 'C'] ，如果小甲鱼想要在元素 'i' 和 'h' 之间插入元素 's'，应该使用什么方法来插入？
答： insert(2, ’s’)
第12课课后练习
1.	请问如何将下边这个列表的 '小甲鱼 '修改为 '小鱿鱼 '？
list1 = [1, [1, 2, ['小甲鱼']], 3, 5, 8, 13, 18] 
	答： list1(1)=[1, 2, [‘小鱿鱼’]]
	参考答案： list1[1][2][0] = ‘小鱿鱼’
2.	要对一个列表进行顺序排序，请问使用什么方法？
答： sort()
3.	要对一个列表进行逆序排序，请问使用什么方法？
答：sort(reverse=true)
4. 列表还有两个内置方法没给大家介绍，不过聪明的你应该可以自己摸索使用
的门道吧： copy() 和 clear() 
	答：
>>> member=[1,2,3,4]
>>> member1=member.copy()
>>> member1
[1, 2, 3, 4]
>>> member1.clear()
>>> member1
[]
5.	你有听说过列表推导式或列表解析吗？、
没听过，直接看参考答案：
>>> [ i*i for i in range(10) ]
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81] 
列表推导式（ List comprehensions ）也叫列表解析，灵感取自函数式编程语言
Haskell 。Ta 是一个非常有用和灵活的工具， 可以用来动态的创建列表， 语法如：
[有关 A 的表达式 for A in B] 
例如
1. >>> list1 = [x**2 for x in range(10)] 
2. >>> list1 
3. [0, 1, 4, 9, 16, 25, 36, 49, 64, 81] 

相当于
1. list1 = [] 
2. for x in range(10): 
3. list1.append(x**2)
问题：请先在 IDLE 中获得下边列表的结果，并按照上方例子把列表推导式还
原出来。
1.	>>> list1 = [(x, y) for x in range(10) for y in range(10) if x%2==0 if y%2!=0]

[(0, 1), (0, 3), (0, 5), (0, 7), (0, 9), (2, 1), (2, 3), (2, 5), (2, 7), (2, 9), (4, 1), (4, 3), (4, 5), (4, 7), (4, 9), (6, 1), (6, 3), (6, 5), (6, 7), (6, 9), (8, 1), (8, 3), (8, 5), (8, 7), (8, 9)]

list1 = [] 
for x in ragne(10): 
for y in range(10): 
if x%2 == 0: 
if y%2 != 0: 
 list1.append((x, y))
6.	活学活用：请使用列表推导式补充被小甲鱼不小心涂掉的部分
>>> list3 = [name + ' ：' + slogan[2:] for slogan in list1 for name in list2 if slogan[0] == name[0]]
*这个没看懂…
