第27课 集合set
1.	定义
>>> num = {}
>>> type(num)
<class 'dict'>
>>> num = {1,2,3}
>>> type(num)
<class 'set'>
	集合内的成员是唯一的，当重复赋值时，会自动剔除重复内容。集合是无序的，不支持索引
>>> num = {1,2,3,1,2,3,4,5,6}
>>> num
{1, 2, 3, 4, 5, 6}
编程练习：用两种方式去除数组中重复的元素: [1, 2, 3, 4, 5, 5, 3, 1, 0]
	两种方式的区别：列表的方式可以维持原数据集的顺序，提出重复出现的数据（输出结果[1, 2, 3, 4, 5, 0]）; 而集合的方式是无需的，输出数据会重新排序（输出结果[0, 1, 2, 3, 4, 5]），破坏了原数据集的顺序。
2.	访问
•	可以用for把集合中的数据读取出来；
•	也可以用in 和not in判断一个元素是否存在于集合中。
>>> num = {0, 1, 2, 3, 4, 5}
>>> 1 in num
True
>>> 9 in num
False
3.	删除修改
>>> num.add(6)
>>> num
{0, 1, 2, 3, 4, 5, 6}
>>> num.remove(1)
>>> num
{0, 2, 3, 4, 5, 6}
4.	不可变集合
frozenset()语句
 	>>> num1 = frozenset([1,2,3,4,5])
>>> type(num1)
<class 'frozenset'>
>>> num1.add(0)
Traceback (most recent call last):
 	 File "<pyshell#10>", line 1, in <module>
   	 num1.add(0)
AttributeError: 'frozenset' object has no attribute 'add'
课后练习
0.	集合的作用？
确保集合内元素的唯一性
1.	如果希望集合内容不变怎么办？
frozenset()
2.	如何确定一个集合里面有多少个元素？
len()
3.	目测以下代码的打印内容
Num_set = set([1,2,3,4,5])
Num_set[0]

会报错，因为集合是无序的
4.	请问set1 = {[1, 2]}和set1 = set([1, 2])的执行结果一样吗?
不一样，前者会报错，后者生成的是集合{1, 2}
5.	打开IDLE，输入set1  {1, 1.0}. 你发现了什么？
集合内容是{1.0}
参考答案的解释：因为Python的哈希函数会将相同的值元素计算得到相同的地址，所以1和1.0是等值的
6.	请问如何给集合添加和删除元素
add()和remuve()函数
